affected:
- package:
    ecosystem: PyPI
    name: tensorflow-cpu
    purl: pkg:pypi:tensorflow-cpu
  ranges:
  - events:
    - introduced: '0'
    - fixed: da8558533d925694483d2c136a9220d6d49d843c
    repo: https://github.com/tensorflow/tensorflow
    type: GIT
  - events:
    - introduced: '0'
    - fixed: 1.15.4
    - introduced: 2.0.0
    - fixed: 2.0.3
    - introduced: 2.1.0
    - fixed: 2.1.2
    - introduced: 2.2.0
    - fixed: 2.2.1
    - introduced: 2.3.0
    - fixed: 2.3.1
    type: ECOSYSTEM
aliases:
- CVE-2020-15190
- GHSA-4g9f-63rx-5cw4
details: In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the
  `tf.raw_ops.Switch` operation takes as input a tensor and a boolean and outputs
  two tensors. Depending on the boolean value, one of the tensors is exactly the input
  tensor whereas the other one should be an empty tensor. However, the eager runtime
  traverses all tensors in the output. Since only one of the tensors is defined, the
  other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined
  behavior and reported as an error if compiling with `-fsanitize=null`. In this case,
  this results in a segmentation fault The issue is patched in commit da8558533d925694483d2c136a9220d6d49d843c,
  and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.
id: PYSEC-0000-CVE-2020-15190
modified: '2020-10-29T16:15:00Z'
published: '2020-09-25T19:15:00Z'
references:
- type: FIX
  url: https://github.com/tensorflow/tensorflow/commit/da8558533d925694483d2c136a9220d6d49d843c
- type: ADVISORY
  url: https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4g9f-63rx-5cw4
- type: WEB
  url: https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1
- type: WEB
  url: http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html
